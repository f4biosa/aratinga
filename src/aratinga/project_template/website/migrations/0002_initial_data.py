from django.db import migrations
from wagtail.models import Locale
from aratinga.admin.models import Theme

from django.conf import settings
from aratinga.admin.thread import set_theme

def initial_data(apps, schema_editor):
    ContentType = apps.get_model('contenttypes.ContentType')
    Page = apps.get_model('wagtailcore.Page')
    Site = apps.get_model('wagtailcore.Site')
    WebPage = apps.get_model('website.WebPage')

    # Create page content type
    webpage_content_type, created = ContentType.objects.get_or_create(
        model='webpage',
        app_label='website',
    )

    # Delete the default home page generated by wagtail,
    # and replace it with a more useful page type.
    curr_homepage = Page.objects.filter(slug='home').delete()

    homepage = WebPage.objects.create(
        title = "Home",
        slug='home',
        custom_template='aratinga/pages/web_page.html',
        content_type=webpage_content_type,
        path='00010001',
        depth=2,
        numchild=0,
        url_path='/home/',
        locale_id=Locale.get_default().id,
    )

    # Create a new default site
    site = Site.objects.create(
        hostname='localhost',
        site_name='localhost',
        root_page_id=homepage.id,
        is_default_site=True
    )

    theme = Theme.objects.create(
        name='Bootstrap5',
        description='',
        theme_path='themes/bootstrap5'
    )

    # Obter o tema ativo para o site
    try:
        theme_settings = settings.ThemeSettings.for_site(site)
        theme_settings.theme = theme

        if theme is not None:
            set_theme(theme)
        
    except settings.ThemeSettings.DoesNotExist:
        pass



class Migration(migrations.Migration):

    dependencies = [
        ('aratinga', '0001_initial'),
        ('wagtailcore', '0057_page_locale_fields_notnull'),
        ('website', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(initial_data),
    ]



